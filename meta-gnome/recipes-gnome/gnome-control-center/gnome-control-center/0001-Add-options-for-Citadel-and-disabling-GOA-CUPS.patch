From 379b93699b428ccb49f0d48ed1366a67f9ab5ffc Mon Sep 17 00:00:00 2001
From: Bruce Leidl <bruce@subgraph.com>
Date: Tue, 27 Oct 2020 16:43:34 -0400
Subject: [PATCH] Add options for Citadel and disabling GOA/CUPS

---
 meson.build                            | 14 +++++++++++++
 meson_options.txt                      |  5 +++++
 panels/background/bg-pictures-source.c | 21 ++++++++++++++++---
 panels/background/meson.build          | 15 ++++++++++----
 panels/meson.build                     | 23 ++++++++++++++-------
 shell/cc-panel-list.c                  | 15 +++++++++++++-
 shell/cc-panel-loader.c                | 28 ++++++++++++++++++++++++++
 tests/meson.build                      |  2 +-
 8 files changed, 107 insertions(+), 16 deletions(-)

diff --git a/meson.build b/meson.build
index 9002169..a2106f6 100644
--- a/meson.build
+++ b/meson.build
@@ -114,6 +114,15 @@ if not libhandy_dep.found()
   libhandy_dep = libhandy.get_variable('libhandy_dep')
 endif
 
+enable_goa = get_option('online_accounts')
+enable_cups = get_option('cups')
+enable_user_accounts = get_option('user_accounts')
+enable_citadel = get_option('citadel')
+config_h.set('WITH_GOA', enable_goa, description: 'Define to enable support for Gnome Online Accounts')
+config_h.set('WITH_CUPS', enable_goa, description: 'Define to enable support for CUPS')
+config_h.set('WITH_USER_ACCOUNTS', enable_user_accounts, description: 'Define to enable user accounts panel')
+config_h.set('CITADEL', enable_citadel, description: 'Define to enable the removal of components unneeded in Citadel')
+
 goa_req_version = '>= 3.25.3'
 pulse_req_version = '>= 2.0'
 
@@ -124,7 +133,9 @@ gio_dep = dependency('gio-2.0')
 glib_dep = dependency('glib-2.0', version: '>= 2.56.0')
 gnome_desktop_dep = dependency('gnome-desktop-3.0', version: '>= 3.33.4')
 gnome_settings_dep = dependency('gnome-settings-daemon', version: '>= 3.27.90')
+if enable_goa
 goa_dep = dependency('goa-1.0', version: goa_req_version)
+endif
 gsettings_desktop_dep = dependency('gsettings-desktop-schemas', version: '>= 3.37.1')
 libxml_dep = dependency('libxml-2.0')
 polkit_gobject_dep = dependency('polkit-gobject-1', version: '>= 0.114')
@@ -149,6 +160,8 @@ common_deps = [
 ]
 
 # Check for CUPS 1.4 or newer
+
+if enable_cups
 cups_dep = dependency('cups', version : '>= 1.4', required: false)
 assert(cups_dep.found(), 'CUPS 1.4 or newer not found')
 
@@ -171,6 +184,7 @@ endforeach
 config_h.set10('HAVE_CUPS_HTTPCONNECT2',
                cc.has_function('httpConnect2', dependencies: cups_dep),
                description: 'Define if httpConnect2() is available in CUPS')
+endif
 
 # Optional dependency for the user accounts panel
 enable_cheese = get_option('cheese')
diff --git a/meson_options.txt b/meson_options.txt
index 1b7b548..8dd1b33 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -8,3 +8,8 @@ option('tracing', type: 'boolean', value: false, description: 'add extra debuggi
 option('wayland', type: 'boolean', value: true, description: 'build with Wayland support')
 option('profile', type: 'combo', choices: ['default','development'], value: 'default')
 option('malcontent', type: 'boolean', value: false, description: 'build with malcontent support')
+option('staging_dir', type: 'string', description: 'set staging directory for cross-compile')
+option('online_accounts', type: 'boolean', value: false, description: 'build with support for gnome-online-accounts')
+option('cups', type: 'boolean', value: false, description: 'build with support for CUPS')
+option('user_accounts', type: 'boolean', value: false, description: 'build with support for user accounts panel')
+option('citadel', type: 'boolean', value: true, description: 'build with Citadel support, which removes unneeded components')
diff --git a/panels/background/bg-pictures-source.c b/panels/background/bg-pictures-source.c
index 3a3027b..a973b78 100644
--- a/panels/background/bg-pictures-source.c
+++ b/panels/background/bg-pictures-source.c
@@ -29,7 +29,9 @@
 #include <string.h>
 #include <cairo-gobject.h>
 #include <gio/gio.h>
+#ifdef WITH_GOA
 #include <grilo.h>
+#endif
 #include <libgnome-desktop/gnome-desktop-thumbnail.h>
 #include <gdesktop-enums.h>
 
@@ -43,8 +45,9 @@ struct _BgPicturesSource
 
   GCancellable *cancellable;
 
+#ifdef WITH_GOA
   CcBackgroundGriloMiner *grl_miner;
-
+#endif
   GFileMonitor *picture_dir_monitor;
   GFileMonitor *cache_dir_monitor;
 
@@ -83,8 +86,9 @@ bg_pictures_source_dispose (GObject *object)
       g_clear_object (&source->cancellable);
     }
 
+#ifdef WITH_GOA
   g_clear_object (&source->grl_miner);
-
+#endif
   G_OBJECT_CLASS (bg_pictures_source_parent_class)->dispose (object);
 }
 
@@ -392,7 +396,9 @@ add_single_file (BgPicturesSource     *bg_source,
   const gchar *pictures_path;
   g_autoptr(GFile) pictures_dir = NULL;
   g_autoptr(GFile) cache_dir = NULL;
+#ifdef WITH_GOA
   GrlMedia *media;
+#endif
 
   /* find png and jpeg files */
   if (!content_type)
@@ -432,13 +438,16 @@ add_single_file (BgPicturesSource     *bg_source,
                 "source-url", source_uri,
 		NULL);
 
+#ifdef WITH_GOA
   media = g_object_get_data (G_OBJECT (file), "grl-media");
   if (media == NULL)
     {
+#endif
       g_object_set_data_full (G_OBJECT (file), "item", g_object_ref (item), g_object_unref);
       g_file_read_async (file, G_PRIORITY_DEFAULT,
                          bg_source->cancellable,
                          picture_opened_for_read, bg_source);
+#ifdef WITH_GOA
     }
   else
     {
@@ -476,7 +485,7 @@ add_single_file (BgPicturesSource     *bg_source,
                          picture_copied_for_read,
                          bg_source);
     }
-
+#endif
   retval = TRUE;
 
  out:
@@ -496,6 +505,7 @@ add_single_file_from_info (BgPicturesSource *bg_source,
   return add_single_file (bg_source, file, content_type, mtime);
 }
 
+#ifdef WITH_GOA
 static gboolean
 add_single_file_from_media (BgPicturesSource *bg_source,
                             GFile            *file,
@@ -520,6 +530,7 @@ add_single_file_from_media (BgPicturesSource *bg_source,
 
   return add_single_file (bg_source, file, content_type, (guint64) mtime_unix);
 }
+#endif
 
 gboolean
 bg_pictures_source_add (BgPicturesSource     *bg_source,
@@ -804,6 +815,7 @@ monitor_path (BgPicturesSource *self,
   return monitor;
 }
 
+#ifdef WITH_GOA
 static void
 media_found_cb (BgPicturesSource *self, GrlMedia *media)
 {
@@ -815,6 +827,7 @@ media_found_cb (BgPicturesSource *self, GrlMedia *media)
   g_object_set_data_full (G_OBJECT (file), "grl-media", g_object_ref (media), g_object_unref);
   add_single_file_from_media (self, file, media);
 }
+#endif
 
 static void
 bg_pictures_source_init (BgPicturesSource *self)
@@ -837,9 +850,11 @@ bg_pictures_source_init (BgPicturesSource *self)
   cache_path = bg_pictures_source_get_cache_path ();
   self->cache_dir_monitor = monitor_path (self, cache_path);
 
+#ifdef WITH_GOA
   self->grl_miner = cc_background_grilo_miner_new ();
   g_signal_connect_object (self->grl_miner, "media-found", G_CALLBACK (media_found_cb), self, G_CONNECT_SWAPPED);
   cc_background_grilo_miner_start (self->grl_miner);
+#endif
 }
 
 BgPicturesSource *
diff --git a/panels/background/meson.build b/panels/background/meson.build
index e9fa398..534b999 100644
--- a/panels/background/meson.build
+++ b/panels/background/meson.build
@@ -34,9 +34,11 @@ install_data(
 
 common_sources = []
 
+staging = get_option('staging_dir')
+
 enums = 'gdesktop-enums-types'
 enums_header = files(
-  gsettings_desktop_dep.get_pkgconfig_variable('prefix') + '/include/gsettings-desktop-schemas/gdesktop-enums.h',
+  staging + gsettings_desktop_dep.get_pkgconfig_variable('prefix') + '/include/gsettings-desktop-schemas/gdesktop-enums.h',
   'cc-background-item.h'
 )
 
@@ -81,22 +83,27 @@ sources = common_sources + files(
   'bg-source.c',
   'bg-wallpapers-source.c',
   'cc-background-chooser.c',
-  'cc-background-grilo-miner.c',
   'cc-background-item.c',
   'cc-background-panel.c',
   'cc-background-preview.c',
   'cc-background-xml.c',
 )
 
+if enable_goa
+sources += files('cc-background-grilo-miner.c')
+endif
+
 deps = common_deps + [
   gdk_pixbuf_dep,
   gnome_desktop_dep,
-  goa_dep,
   libxml_dep,
   dependency('cairo-gobject'),
-  dependency('grilo-0.3', version: '>= 0.3.0')
 ]
 
+if enable_goa
+deps += [ goa_dep, dependency('grilo-0.3', version: '>= 0.3.0') ]
+endif
+
 cflags += [
   '-DDATADIR="@0@"'.format(control_center_datadir),
   '-DGNOME_DESKTOP_USE_UNSTABLE_API'
diff --git a/panels/meson.build b/panels/meson.build
index 2f4fdc5..82f54bd 100644
--- a/panels/meson.build
+++ b/panels/meson.build
@@ -1,12 +1,10 @@
 subdir('common')
 
 panels = [
-  'applications',
   'background',
   'camera',
   'color',
   'datetime',
-  'default-apps',
   'diagnostics',
   'display',
   'info-overview',
@@ -16,17 +14,12 @@ panels = [
   'microphone',
   'mouse',
   'notifications',
-  'online-accounts',
   'power',
-  'printers',
   'region',
-  'removable-media',
   'search',
-  'sharing',
   'sound',
   'universal-access',
   'usage',
-  'user-accounts'
 ]
 
 if host_is_linux
@@ -41,6 +34,22 @@ if host_is_linux_not_s390
   ]
 endif
 
+if enable_goa
+  panels += ['online-accounts']
+endif
+
+if enable_cups
+  panels += ['printers']
+endif
+
+if enable_user_accounts
+  panels += ['user-accounts']
+endif
+
+if not enable_citadel
+  panel_names += ['applications', 'default-apps', 'removable-media', 'sharing']
+endif
+
 panels_list = []
 panels_libs = []
 foreach cappletname: panels
diff --git a/shell/cc-panel-list.c b/shell/cc-panel-list.c
index e23da0b..b6aacfb 100644
--- a/shell/cc-panel-list.c
+++ b/shell/cc-panel-list.c
@@ -386,11 +386,16 @@ static const gchar * const panel_order[] = {
   "background",
   "notifications",
   "search",
+#ifndef CITADEL
   "applications",
+#endif
   "privacy",
+#ifndef WITH_GOA
   "online-accounts",
+#endif
+#ifndef CITADEL
   "sharing",
-
+#endif
   /* Privacy page */
   "location",
   "camera",
@@ -406,16 +411,24 @@ static const gchar * const panel_order[] = {
   "display",
   "mouse",
   "keyboard",
+#ifndef WITH_CUPS
   "printers",
+#endif
+#ifndef CITADEL
   "removable-media",
+#endif
   "wacom",
   "color",
 
   /* Details page */
   "region",
   "universal-access",
+#ifndef WITH_USER_ACCOUNTS
   "user-accounts",
+#endif
+#ifndef CITADEL
   "default-apps",
+#endif
   "reset-settings",
   "datetime",
   "info-overview",
diff --git a/shell/cc-panel-loader.c b/shell/cc-panel-loader.c
index f203843..cad01f5 100644
--- a/shell/cc-panel-loader.c
+++ b/shell/cc-panel-loader.c
@@ -31,14 +31,18 @@
 #ifndef CC_PANEL_LOADER_NO_GTYPES
 
 /* Extension points */
+#ifndef CITADEL
 extern GType cc_applications_panel_get_type (void);
+#endif
 extern GType cc_background_panel_get_type (void);
 #ifdef BUILD_BLUETOOTH
 extern GType cc_bluetooth_panel_get_type (void);
 #endif /* BUILD_BLUETOOTH */
 extern GType cc_color_panel_get_type (void);
 extern GType cc_date_time_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_default_apps_panel_get_type (void);
+#endif
 extern GType cc_display_panel_get_type (void);
 extern GType cc_info_overview_panel_get_type (void);
 extern GType cc_keyboard_panel_get_type (void);
@@ -48,19 +52,29 @@ extern GType cc_network_panel_get_type (void);
 extern GType cc_wifi_panel_get_type (void);
 #endif /* BUILD_NETWORK */
 extern GType cc_notifications_panel_get_type (void);
+#ifdef WITH_GOA
 extern GType cc_goa_panel_get_type (void);
+#endif
 extern GType cc_power_panel_get_type (void);
+#ifdef WITH_CUPS
 extern GType cc_printers_panel_get_type (void);
+#endif
 extern GType cc_region_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_removable_media_panel_get_type (void);
+#endif
 extern GType cc_search_panel_get_type (void);
+#ifndef CITADEL
 extern GType cc_sharing_panel_get_type (void);
+#endif
 extern GType cc_sound_panel_get_type (void);
 #ifdef BUILD_THUNDERBOLT
 extern GType cc_bolt_panel_get_type (void);
 #endif /* BUILD_THUNDERBOLT */
 extern GType cc_ua_panel_get_type (void);
+#ifdef WITH_USER_ACCOUNTS
 extern GType cc_user_panel_get_type (void);
+#endif
 #ifdef BUILD_WACOM
 extern GType cc_wacom_panel_get_type (void);
 #endif /* BUILD_WACOM */
@@ -90,7 +104,9 @@ extern void cc_wacom_panel_static_init_func (void);
 
 static CcPanelLoaderVtable default_panels[] =
 {
+#ifndef CITADEL
   PANEL_TYPE("applications",     cc_applications_panel_get_type,         NULL),
+#endif
   PANEL_TYPE("background",       cc_background_panel_get_type,           NULL),
 #ifdef BUILD_BLUETOOTH
   PANEL_TYPE("bluetooth",        cc_bluetooth_panel_get_type,            NULL),
@@ -98,7 +114,9 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("camera",           cc_camera_panel_get_type,               NULL),
   PANEL_TYPE("color",            cc_color_panel_get_type,                NULL),
   PANEL_TYPE("datetime",         cc_date_time_panel_get_type,            NULL),
+#ifndef CITADEL
   PANEL_TYPE("default-apps",     cc_default_apps_panel_get_type,         NULL),
+#endif
   PANEL_TYPE("diagnostics",      cc_diagnostics_panel_get_type,          cc_diagnostics_panel_static_init_func),
   PANEL_TYPE("display",          cc_display_panel_get_type,              NULL),
   PANEL_TYPE("info-overview",    cc_info_overview_panel_get_type,        NULL),
@@ -112,20 +130,30 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("wifi",             cc_wifi_panel_get_type,                 cc_wifi_panel_static_init_func),
 #endif
   PANEL_TYPE("notifications",    cc_notifications_panel_get_type,        NULL),
+#ifdef WITH_GOA
   PANEL_TYPE("online-accounts",  cc_goa_panel_get_type,                  NULL),
+#endif
   PANEL_TYPE("power",            cc_power_panel_get_type,                NULL),
+#ifdef WITH_CUPS
   PANEL_TYPE("printers",         cc_printers_panel_get_type,             NULL),
+#endif
   PANEL_TYPE("region",           cc_region_panel_get_type,               NULL),
+#ifndef CITADEL
   PANEL_TYPE("removable-media",  cc_removable_media_panel_get_type,      NULL),
+#endif
   PANEL_TYPE("search",           cc_search_panel_get_type,               NULL),
+#ifndef CITADEL
   PANEL_TYPE("sharing",          cc_sharing_panel_get_type,              NULL),
+#endif
   PANEL_TYPE("sound",            cc_sound_panel_get_type,                NULL),
 #ifdef BUILD_THUNDERBOLT
   PANEL_TYPE("thunderbolt",      cc_bolt_panel_get_type,                 NULL),
 #endif
   PANEL_TYPE("universal-access", cc_ua_panel_get_type,                   NULL),
   PANEL_TYPE("usage",            cc_usage_panel_get_type,                NULL),
+#ifdef WITH_USER_ACCOUNTS
   PANEL_TYPE("user-accounts",    cc_user_panel_get_type,                 NULL),
+#endif
 #ifdef BUILD_WACOM
   PANEL_TYPE("wacom",            cc_wacom_panel_get_type,                cc_wacom_panel_static_init_func),
 #endif
diff --git a/tests/meson.build b/tests/meson.build
index d4fe361..b879160 100644
--- a/tests/meson.build
+++ b/tests/meson.build
@@ -6,5 +6,5 @@ endif
 
 subdir('interactive-panels')
 
-subdir('printers')
+#subdir('printers')
 subdir('info')
